日报，套话:
研究新的技术，为日后做准备   
修改项目BUG，以及维护
******************************10.9第三天************************************

******************************10.8第二天************************************
目标：
	1、完善登录功能
	2、完成管理员日志列表。
	3、
其它：
	1、把封装数据库方法改成Promise形式
	2、路由模块化
**********************************插槽*********************************
https://blog.csdn.net/u012149969/category_7658602.html
1、匿名插槽
    1、引入一个组件
        <My>
            <div>456</div>
        </My>
    2、组件My：
        <div>
            <slot></slot>
            <slot></slot>
        123
        </div>
2、具名插槽
       1、引入一个组件
            <My>
                <div slot="one">456</div>
            </My>
        2、组件My：
            <div>
                <slot name="one"></slot>
                <slot></slot>
            123
            </div>
3、插槽作用域
     1、引入一个组件
        <My>
            <div slot="one" scope-slot='item'>456</div>
        </My>
     2、组件My：
        <div>
            <slot name="one" :data="{}" :userName="userName"></slot>
            <slot></slot>
        123
        </div>
********************************************************************
加载中：
	后续很多组件都要与接口打交道
	开始请求数据时，提示加载中
	数据加载完毕后，加载中关闭
*****************************axios拦截器******************************
axios:拦截器
	1、拦截请求
		axios.interceptors.request.use((config)=>{
			config.url = "/ele"+config.url; // config.url -->/ele/login token
			return config; //返回配置信息。返回的配置信息是最终请求的信息	
		})
	2、拦截响应，实现对数据的过滤
		axios.interceptors.response.use(res=>{
			//返回即是请求最终得到的内容
			console.log(res)
			return res.data;
		})
		
************************token********************************
token令牌，前后端分离开发。一个加密以后的字符串。该字符串可以被反编译
1、当用户登录完成后，服务端会生成一个令牌，res返回给前端
	令牌包含：个人信息，过期时间
2、前端得到令牌后保存到store.state中
3、调用敏感的接口时传递token
4、服务端会对token进行验证
	1、验证token是否正确
		1、正确
			验证token是否过期
				1、过期：返回过期信息给前端。前端让其自动退出
				2、未过期：继续执行
		2、不正确。返回异常。前端让其自动退出
**************token生成以及使用*****************************
1、下载模块 JWT--》json-web-token
	cnpm install jwt-simple -S
2、引入
	const jwt = require("jwt-simple");
3、生成
	jwt.encode(playload,key)
	jwt.decode(token,key)
	在调用私密接口的时候使用
******************************10.7第一天************************************
首页详情列表页，登录注册购物车
1、可以话术你的项目
2、当你看到一个新的项目时，脑海中应当有思路
********************************************************************
目标：将后台管理的框架搭建好，完成登陆功能。axios  jwt  md5
****************************elementUi*******************************
官网：http://element.eleme.cn/#/zh-CN
介绍：element，一套为开发者、设计师和产品经理准备的基于Vue2.0的桌面端(pc端)组件库
1、不要刻意记
2、有空多用用，看说明
使用步骤：
	1、安装
		cnpm i element-ui -S
	2、引入
		import ElementUI from 'element-ui'; //引入组件库
		import 'element-ui/lib/theme-chalk/index.css';引入的组件所需要的css
	3、使用
		Vue.use(ElementUI); //安装elementui插件
**********************************************************************
MD5：是一种加密方式。不允许被反编译  sha1 base64
1、下载
	cnpm i md5 -S
2、引入
	const md5 = require("md5");
3、加密
	const passWord = md5("加密的字符")
	可以加盐，拼接盐值，增加密码难度
**********************************************************************
1、登陆界面。
2、管理界面。
**********************************************************************
采用子路由的方式，设置meta值，设置二级路由
路由：{
            name:"login",
            meta:{
                isAuthorization:false
            }
        },
        {
            name:"app",
            children:[
                {
                    manageShop,
                    meta:{
                        isAuthorization:true
                    }
                },
                {
                    manageGoods
                }
            ]
        }